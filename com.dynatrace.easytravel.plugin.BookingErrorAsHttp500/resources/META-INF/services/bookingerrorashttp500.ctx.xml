<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Definition of the class which implements the interface for this plugin -->
	<bean id="bookingerrorashttp500" class="com.dynatrace.easytravel.booking.BookingErrorAsHttp500">
		<property name="name" value="BookingErrorAsHttp500" />
		<property name="compatibility" value="Both" />
		<property name="groupName" value="Http Errors" />
		<property name="extensionPoint" value="frontend.booking.*" />
		<property name="description" value="Throws a HTTP 500 Server Error if the payment validation or booking yield an unexpected error, e.g. if the credit card or payment service plugin are unavailable. Usually you will combine this problem pattern with others, e.g. by disabling all 'NativeApplication' problem patterns." />
	</bean>
	
	<!-- inject the plugin as generic plugin so we get called from various places -->
	<bean class="com.dynatrace.easytravel.spring.PluginBeanFactoryPostProcessor">
		<property name="extensionBeanName" value="pluginHolder" />
  	    <property name="propertyName" value="plugins" />
	    <property name="pluginBeanName" value="bookingerrorashttp500" />
	</bean>
</beans>
